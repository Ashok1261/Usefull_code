
def save_evaluation_results_to_blob(questions, filename="evaluation_results.csv") -> str:
    """Save valid questions and answers to blob and return just the blob path string"""

    try:
        df = pd.DataFrame(questions)

        # Ensure required columns
        required_columns = ["Question Type", "Question", "Answer"]
        for col in required_columns:
            if col not in df.columns:
                df[col] = ""

        # Format date columns safely
        for col in ["Question", "Answer"]:
            df[col] = pd.to_datetime(df[col], format="%Y%m%d", errors="coerce") \
                          .dt.strftime("%m-%d-%Y") \
                          .fillna(df[col])

        csv_buffer = io.StringIO()
        df.to_csv(csv_buffer, index=False)

        # Upload
        storage_obj = DataCurationService().upload_file_blob(
            csv_buffer.getvalue(),
            filename=filename,
            blobFilePath=BlobLocation(
                absolute_path=filename,
                container_name="pvt-markets"
            )
        )

        # FIX: Extract actual path string from storage_obj
        if hasattr(storage_obj, 'message'):
            return storage_obj.message  # This will be: 'File successfully saved to: pvt-markets'
        else:
            return str(storage_obj)

    except Exception as e:
        logger.error(f"Error saving questions to blob: {e}", exc_info=True)
        return ""
