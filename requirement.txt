def save_evaluation_results_to_blob(questions, filename="evaluation_results.csv") -> str:
    """Save valid questions and answers to blob and return the string path"""
    try:
        df = pd.DataFrame(questions)

        required_columns = ["Question Type", "Question", "Answer"]
        for col in required_columns:
            if col not in df.columns:
                df[col] = ""

        for col in ["Question", "Answer"]:
            df[col] = pd.to_datetime(df[col], format="%Y%m%d", errors="coerce").dt.strftime("%m-%d-%Y").fillna(df[col])

        csv_buffer = io.StringIO()
        df.to_csv(csv_buffer, index=False)

        # Upload to blob using existing method
        response = DataCurationService().upload_file_blob(
            csv_buffer.getvalue(),
            filename="evaluation_results.csv",
            blobFilePath=BlobLocation(
                absolute_path="your-path-here",  # ← make sure this is set
                container_name="your-container"
            )
        )

        # ✅ Return only the actual path
        if isinstance(response, dict) and "storagePath" in response:
            return response["storagePath"]
        else:
            return ""

    except Exception as e:
        logger.error(f"Error saving questions to blob: {e}", exc_info=True)
        return ""
