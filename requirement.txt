async def get_all_evaluation_strategies(self, limit: int, offset: int):
    try:
        items, total = self.evaluation_dao.get_all_evaluation_strategies(limit, offset)

        if not items:
            raise Exception("No Evaluation Curation Strategy records found.")

        response = {
            "items": [
                {
                    "strategyId": i.id,
                    "strategyName": i.name,
                    "description": i.description,
                    "strategyConfig": EvalConfig(**i.config) 
                        if isinstance(i.config, dict) and "static" in i.config and "dynamic" in i.config 
                        else {},
                    "createdBy": i.created_by,
                    "modifiedBy": i.modified_by,
                    "createdTs": i.created_ts,
                    "modifiedTs": i.modified_ts
                }
                for i in items
            ],
            "count": total,
            "limit": limit,
            "offset": offset
        }

        return response

    except Exception as e:
        logger.error(f"Exception in getting all evaluation strategies: {e}", exc_info=True)
        raise Exception(str(e))
