
def save_questions_to_blob(questions, filename):
    try:
        df = pd.DataFrame(questions)

        required_columns = ["Question Type", "Question", "Answer"]
        for col in required_columns:
            if col not in df.columns:
                df[col] = ""

        # Optional date formatting (skip if not needed)
        for col in ["Question", "Answer"]:
            df[col] = pd.to_datetime(df[col], format="%Y%m%d", errors="coerce") \
                .dt.strftime("%m-%d-%Y").fillna(df[col])

        csv_buffer = io.StringIO()
        df.to_csv(csv_buffer, index=False)

        # Extract directory and filename
        folder_path = os.path.dirname(filename)
        file_name = os.path.basename(filename)

        # ✅ Upload using correct structure
        result = DataCurationService().upload_file_blob(
            data=csv_buffer.getvalue(),
            filename=file_name,
            blobFilePath=BlobLocation(
                container_name="pvt-markets",
                absolute_path=folder_path
            )
        )

        print("✅ Upload to blob successful.")
        return result.get("storagePath")  # ✅ return actual saved path

    except Exception as e:
        logger.error(f"Error saving questions to blob: {e}", exc_info=True)
        print(f"❌ Error saving to blob: {e}")
        return None
