
import matplotlib.pyplot as plt

# Accuracy data
accuracy = [79, 84, 91]

# X-axis labels
x_labels = [
    "Original QA\n(80K)",
    "Consolidated QA\nPre-CoT Filter\n(200K)",
    "Consolidated QA\nPost-CoT Filter\n(112K)"
]

# Colors for bars
colors = ['#0074D9', '#B10DC9', '#2ECC40']  # Blue, Magenta, Green

# Set up figure
fig, ax = plt.subplots(figsize=(10, 6))

# Plot bars
bars = ax.bar(range(len(accuracy)), accuracy, color=colors)

# Annotate accuracy values in bold
for bar, acc in zip(bars, accuracy):
    ax.text(
        bar.get_x() + bar.get_width() / 2,
        bar.get_height() + 2,
        f"{acc}%",
        ha='center',
        va='bottom',
        fontsize=14,
        fontweight='bold'
    )

# Styling
ax.set_ylabel("Accuracy (%)", fontsize=14, fontweight='bold')
ax.set_xlabel("QA Stages", fontsize=14, fontweight='bold')
ax.set_ylim(0, 100)
ax.set_title("Accuracy Progression Across QA Pipeline with CoT Filtering",
             fontsize=16, fontweight='bold')

# Bold X-axis labels
ax.set_xticks(range(len(x_labels)))
ax.set_xticklabels(x_labels, fontsize=12, fontweight='bold')

# Y-axis ticks styling
ax.tick_params(axis='y', labelsize=12)

# No gridlines
ax.grid(False)

# Save high-resolution files
plt.tight_layout()
plt.savefig("qa_accuracy_chart_research_bold_values.png", dpi=300, bbox_inches='tight')  # For Word/Google Docs
plt.savefig("qa_accuracy_chart_research_bold_values.pdf", bbox_inches='tight')          # For LaTeX
plt.show()
