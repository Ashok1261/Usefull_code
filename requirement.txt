import numpy as np
import pandas as pd

def process_promptflow_task(task):
    ...
    if isinstance(result.output, pd.DataFrame):
        df_serializable = result.output.where(pd.notnull(result.output), None)

        def convert_value(val):
            if isinstance(val, (np.integer, np.int64, np.int32)):
                return int(val)
            elif isinstance(val, (np.floating, np.float64, np.float32)):
                return float(val)
            elif isinstance(val, (np.bool_, bool)):
                return bool(val)
            elif pd.isna(val):
                return None
            else:
                return str(val) if isinstance(val, (dict, list, set)) else val

        df_serializable = df_serializable.applymap(convert_value)

        output_result = df_serializable.to_dict(orient="records")
    else:
        output_result = result.output

    # Ensure final output is JSON serializable (double check!)
    import json
    try:
        json.dumps(output_result)
    except TypeError as e:
        raise ValueError(f"Final output is not JSON serializable: {e}")

    # Save in DB
    task_record.output = {
        "results": {"response": output_result},
        "outputDirectory": output_path,
    }
    ...
