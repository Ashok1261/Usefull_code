import pandas as pd
import numpy as np
import json

def convert_to_serializable(val):
    """Convert any non-serializable NumPy types or NaNs."""
    if pd.isna(val):
        return None
    elif isinstance(val, (np.integer, np.int64, np.int32)):
        return int(val)
    elif isinstance(val, (np.floating, np.float64, np.float32)):
        return float(val)
    elif isinstance(val, (np.bool_, bool)):
        return bool(val)
    else:
        return val


if isinstance(result.output, pd.DataFrame):
    df_clean = result.output.where(pd.notnull(result.output), None)
    df_serializable = df_clean.applymap(convert_to_serializable)
    output_result = df_serializable.to_dict(orient="records")
else:
    output_result = result.output

# ðŸ”’ Final check to ensure JSON serializability
try:
    json.dumps(output_result)
except TypeError as e:
    raise ValueError(f"Final output is not JSON serializable: {e}")
