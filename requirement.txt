import matplotlib.pyplot as plt
import numpy as np

# Data
volumes = ['30K', '50L', '1L']
factual = [30, 40, 80]
conceptual = [40, 50, 75]
procedural = [0, 50, 80]
reasoning = [0, 0, 80]
inferential = [0, 0, 82]
accuracy = [70, 80, 90]

# Normalize question type data to 100%
data = np.array([factual, conceptual, procedural, reasoning, inferential])
column_sums = data.sum(axis=0)
normalized_data = (data / column_sums) * 100

# Plot positions
x = np.arange(len(volumes))

# Create plot
fig, ax1 = plt.subplots(figsize=(10, 6))

# Colors and labels
colors = ['#1f77b4', '#e84393', '#2ca02c', '#d62728', '#9467bd']
labels = ['Factual', 'Conceptual', 'Procedural', 'Reasoning', 'Inferential']

# Plot stacked bars
bottom = np.zeros(len(volumes))
for i in range(len(normalized_data)):
    bars = ax1.bar(x, normalized_data[i], bottom=bottom, label=labels[i], color=colors[i])
    for j, bar in enumerate(bars):
        if normalized_data[i][j] > 3:
            ax1.text(
                bar.get_x() + bar.get_width() / 2,
                bottom[j] + normalized_data[i][j] / 2,
                f'{normalized_data[i][j]:.0f}%',
                ha='center',
                va='center',
                fontsize=10,
                fontweight='bold',
                color='white'
            )
    bottom += normalized_data[i]

# Add accuracy line on secondary axis
ax2 = ax1.twinx()
ax2.plot(x, accuracy, color='black', marker='o', linewidth=2, label='Accuracy (%)')
ax2.set_ylabel('Accuracy (%)', fontsize=13, fontweight='bold', color='black')
ax2.set_ylim(0, 100)

# Annotate accuracy values
for i, acc in enumerate(accuracy):
    ax2.text(
        x[i],
        acc + 2,
        f'{acc}%',
        ha='center',
        fontsize=11,
        fontweight='bold',
        color='black'
    )

# Axis formatting
ax1.set_xlabel('Data Volume', fontsize=13, fontweight='bold')
ax1.set_ylabel('Question Type Distribution (%)', fontsize=13, fontweight='bold')
ax1.set_xticks(x)
ax1.set_xticklabels(volumes, fontsize=12, fontweight='bold')
ax1.set_yticks([])  # Hide 0–20–40 lines
ax1.set_ylim(0, 100)
ax1.grid(False)

# Title
plt.title('Normalized Question Type Distribution with Accuracy', fontsize=15, fontweight='bold')

# Legend at bottom
custom_legend_labels = labels + ['Accuracy']
custom_legend_colors = colors + ['black']
custom_handles = [plt.Line2D([0], [0], color=color, lw=10) for color in custom_legend_colors]
plt.legend(custom_handles, custom_legend_labels, loc='lower center', bbox_to_anchor=(0.5, -0.3), ncol=6)

# Save the chart
plt.tight_layout()
plt.savefig("normalized_question_distribution_with_accuracy_bold.png", dpi=300, bbox_inches='tight')
plt.show()
