def flatten_config(config: dict, parent_key: str = '', sep: str = '_') -> dict:
    """
    Flattens nested dictionary except for *_kwargs which are kept as full objects.
    """
    flattened = {}
    for k, v in config.items():
        new_key = f"{parent_key}{sep}{k}" if parent_key else k
        if isinstance(v, dict):
            # Do NOT flatten kwargs dicts â€” keep them as whole objects
            if k.endswith("_kwargs"):
                flattened[new_key] = v
            else:
                flattened.update(flatten_config(v, new_key, sep=sep))
        else:
            flattened[new_key] = v
    return flattened
