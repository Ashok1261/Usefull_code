
def save_evaluation_results_to_blob(questions, filename="evaluation_results.csv") -> str:
    """Save valid questions and answers to Azure Blob and return the blob path"""
    try:
        df = pd.DataFrame(questions)

        required_columns = ["Question Type", "Question", "Answer"]
        for col in required_columns:
            if col not in df.columns:
                df[col] = ""

        for col in ["Question", "Answer"]:
            df[col] = pd.to_datetime(df[col], format="%Y%m%d", errors="coerce") \
                         .dt.strftime("%m-%d-%Y") \
                         .fillna(df[col])  # fallback to original if conversion fails

        csv_buffer = io.StringIO()
        df.to_csv(csv_buffer, index=False)

        #  Upload and RETURN path
        blob_path = DataCurationService().upload_file_blob(
            csv_buffer.getvalue(),
            filename=filename,
            blobFilePath=BlobLocation(container_name="evaluation", prefix="results/")
        )

        return blob_path

    except Exception as e:
        logger.error(f"Error saving questions to blob: {e}", exc_info=True)
        return ""
