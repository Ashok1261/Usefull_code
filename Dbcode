import pandas as pd
from sqlalchemy import create_engine, text
import re

# === Step 1: Read your CSV file ===
file_path = 'C:/Users/yezarla.ashok/Desktop/coding/data.csv'  # üîÅ Update path if needed
df = pd.read_csv(file_path)

# === Step 2: PostgreSQL connection settings ===
username = ''
password = ''
host = ''
port = ''
database = ''
table_name = ''

# Create DB connection URL and engine
db_url = f'postgresql://{username}:{password}@{host}:{port}/{database}'
engine = create_engine(db_url)


# === Step 3: Expand column length in PostgreSQL ===
def expand_column(engine, table_name, column_name, new_type="VARCHAR(1000)"):
    try:
        with engine.connect() as conn:
            stmt = text(f'ALTER TABLE "{table_name}" ALTER COLUMN "{column_name}" TYPE {new_type};')
            conn.execute(stmt)
            print(f"‚úÖ Expanded column: {column_name} to {new_type}")
    except Exception as e:
        print(f"‚ùå Failed to alter column {column_name}: {e}")


# === Step 4: Insert and retry after column expansion ===
def insert_with_auto_expand():
    try:
        df.to_sql(table_name, engine, if_exists='append', index=False)
        print("‚úÖ Data inserted successfully.")
    except Exception as e:
        msg = str(e)

        # Detect string truncation error
        if "value too long for type character varying" in msg:
            match = re.search(r'column "([^"]+)"', msg)
            if match:
                column_name = match.group(1)
                print(f"‚ö†Ô∏è Column '{column_name}' caused the issue. Attempting to expand...")
                expand_column(engine, table_name, column_name)
                insert_with_auto_expand()  # üîÅ Retry
            else:
                print("‚ùå Couldn't identify column name in the error message.")
        else:
            print(f"‚ùå Other error: {e}")


# === Step 5: Start the process ===
insert_with_auto_expand()
